name: Azure Static Web Apps CI/CD
env:
    OUTPUT_FOLDER: .output
    DOTNET_VERSION: "6.x"

on:
    push:
        branches:
            - main
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - main
    workflow_dispatch:

permissions:
    id-token: write
    contents: read

jobs:
    build_hugo:
        runs-on: ubuntu-latest
        environment: build
        steps:
            - uses: actions/checkout@v1

            - name: Get Hugo Version
              id: hugo-version
              run: |
                  HUGO_VERSION=$(./hugo version | sed -r 's/^.*v([0-9]*\.[0-9]*\.[0-9]*).*/\1/')
                  echo "::set-output name=HUGO_VERSION::${HUGO_VERSION}"

            - name: Setup Hugo
              uses: peaceiris/actions-hugo@v2
              with:
                  hugo-version: "${{ steps.hugo-version.outputs.HUGO_VERSION }}"
                  extended: true

            - name: Build
              run: hugo --minify --source ./src --destination ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }} --config config.toml,config.speaking.toml

            - name: Publish website output
              uses: actions/upload-artifact@v1
              with:
                  name: website
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

            - name: Publish blog json
              uses: actions/upload-artifact@v1
              with:
                  name: json
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/index.json

    build_search_ui:
        runs-on: ubuntu-latest
        environment: build
        steps:
            - uses: actions/checkout@v1

            - uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Build search app
              run: dotnet build --configuration Release
              working-directory: ./Search

            - name: Publish search UI
              run: dotnet publish --no-build --configuration Release --output ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}
              working-directory: ./Search/Search.Site.UI

            - name: Package search UI
              uses: actions/upload-artifact@v1
              with:
                  name: search
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/wwwroot/_framework

    build_search_index:
        runs-on: ubuntu-latest
        needs: build_hugo
        environment: build
        steps:
            - uses: actions/checkout@v1

            - uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Download index source
              uses: actions/download-artifact@v1
              with:
                  name: json
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

            - name: Build search index
              run: dotnet run
              working-directory: ./Search/Search.IndexBuilder

            - name: Publish search index
              uses: actions/upload-artifact@v1
              with:
                  name: search-index
                  path: ./Search/Search.IndexBuilder/index.zip

    deploy:
        needs: [build_search_ui, build_search_index]
        runs-on: ubuntu-latest
        environment: production
        name: Provision Azure
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Azure Login
              uses: azure/login@v1
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Ensure resource group exists
              uses: azure/CLI@v1
              with:
                  inlineScript: |
                      az group create -g ${{ secrets.RESOURCE_GROUP }} -l ${{ secrets.RESOURCE_GROUP_LOCATION }}
            - name: Deploy Bicep
              uses: azure/arm-deploy@v1
              with:
                  resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
                  subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                  template: ./deploy/main.bicep
                  parameters: swaName=${{ secrets.SWA_NAME }}
                  failOnStdErr: false

            - name: Get SWA deployment token
              uses: azure/CLI@v1
              with:
                  inlineScript: |
                      echo SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list -n ${{ secrets.SWA_NAME }} -o tsv --query properties.apiKey) >> $GITHUB_ENV

            - name: Download website
              uses: actions/download-artifact@v1
              with:
                  name: website
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

            - name: Download search UI
              uses: actions/download-artifact@v1
              with:
                  name: search
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/_framework

            - name: Download search index
              uses: actions/download-artifact@v1
              with:
                  name: search-index
                  path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

            - name: Deploy frontend
              id: build-deploy
              uses: Azure/static-web-apps-deploy@v1
              with:
                  azure_static_web_apps_api_token: ${{ env.SWA_DEPLOYMENT_TOKEN }}
                  repo_token: ${{ secrets.GITHUB_TOKEN }}
                  action: "upload"
                  skip_app_build: true
                  skip_api_build: true
                  cwd: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

    update_readme:
        needs: [deploy]
        runs-on: ubuntu-latest
        name: Update my readme
        environment: production
        steps:
            - name: Workflow Dispatch
              uses: benc-uk/workflow-dispatch@v1
              with:
                  workflow: Update
                  repo: aaronpowell/aaronpowell
                  token: ${{ secrets.PERSONAL_TOKEN }}

    close_pull_request_job:
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        runs-on: ubuntu-latest
        name: Close Pull Request Job
        steps:
            - name: Close Pull Request
              id: closepullrequest
              uses: Azure/static-web-apps-deploy@v0.0.1-preview
              with:
                  azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_SKY_040BE3C1E }}
                  action: "close"
