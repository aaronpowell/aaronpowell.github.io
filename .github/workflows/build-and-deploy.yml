name: Build and deploy (Core)
env:
  OUTPUT_FOLDER: .output
  DOTNET_VERSION: "6.x"

on:
  workflow_call:
    inputs:
      preview:
        required: false
        type: boolean
        default: false

jobs:
  build_hugo:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v3

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"
          extended: true

      - name: Build
        if: ${{ inputs.preview == false }}
        run: hugo --minify --source ./src --destination ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }} --config config.toml,config.speaking.toml

      - name: Build (preview)
        if: ${{ inputs.preview == true }}
        run: hugo --minify --source ./src --destination ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }} --config config.toml,config.speaking.toml --buildDrafts --buildFuture --baseURL '/'

      - run: ls -la ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

      - name: Publish website output
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/

      - name: Publish blog json
        uses: actions/upload-artifact@v4
        with:
          name: json
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/index.json

  build_api:
    runs-on: ubuntu-latest
    environment: build
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16

      - run: npm ci
      - run: npm run build
      - run: mkdir ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}
      - run: tar -cvf ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/api.tar .

      - name: Publish API output
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/api.tar

  build_search_ui:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build search app
        run: dotnet build --configuration Release
        working-directory: ./Search

      - name: Publish search UI
        run: dotnet publish --no-build --configuration Release --output ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}
        working-directory: ./Search/Search.Site.UI

      - name: Package search UI
        uses: actions/upload-artifact@v3
        with:
          name: search
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/wwwroot/_framework

  build_search_index:
    runs-on: ubuntu-latest
    needs: build_hugo
    environment: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download index source
        uses: actions/download-artifact@v4
        with:
          name: json
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

      - name: Build search index
        run: dotnet run
        working-directory: ./Search/Search.IndexBuilder

      - name: Publish search index
        uses: actions/upload-artifact@v3
        with:
          name: search-index
          path: ./Search/Search.IndexBuilder/index.zip

  provision:
    needs: [build_search_ui, build_search_index, build_api]
    runs-on: ubuntu-latest
    environment: production
    name: Provision Azure
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure resource group exists
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az group create -g ${{ secrets.RESOURCE_GROUP }} -l ${{ secrets.RESOURCE_GROUP_LOCATION }}
      - name: Deploy Bicep
        uses: azure/bicep-deploy@v1
        with:
          resource-group-name: ${{ secrets.RESOURCE_GROUP }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template-file: ./deploy/main.bicep
          parameters: swaName=${{ secrets.SWA_NAME }}
          scope: subscription
          type: deployment
          operation: create
          location: ${{ secrets.RESOURCE_GROUP_LOCATION }}
          name: ${{ secrets.SWA_NAME }}

  deploy:
    needs: [provision]
    runs-on: ubuntu-latest
    environment: production
    name: Deploy SWA
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get SWA deployment token
        uses: azure/CLI@v1
        id: swa-token
        with:
          inlineScript: |
            SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list -n ${{ secrets.SWA_NAME }} -o tsv --query properties.apiKey)
            echo "::add-mask::$SWA_DEPLOYMENT_TOKEN"
            echo SWA_DEPLOYMENT_TOKEN=$SWA_DEPLOYMENT_TOKEN >> $GITHUB_ENV

      - name: Download website
        uses: actions/download-artifact@v4
        with:
          name: website
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

      - name: Download search UI
        uses: actions/download-artifact@v4
        with:
          name: search
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}/_framework

      - name: Download search index
        uses: actions/download-artifact@v4
        with:
          name: search-index
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

      - name: Download api
        uses: actions/download-artifact@v4
        with:
          name: api
          path: ${{ github.workspace }}
      - run: |
          mkdir ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}-api
          tar -xf ${{ github.workspace }}/api.tar -C ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}-api
      - name: Download index source
        uses: actions/download-artifact@v4
        with:
          name: json
          path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}-api

      - name: Deploy frontend
        id: build-deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.SWA_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          skip_app_build: true
          skip_api_build: true
          app_location: ${{ env.OUTPUT_FOLDER }}
          api_location: ${{ env.OUTPUT_FOLDER }}-api

  update_readme:
    needs: [deploy]
    runs-on: ubuntu-latest
    name: Update my readme
    environment: production
    if: github.event_name != 'pull_request'
    steps:
      - name: Workflow Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Update
          repo: aaronpowell/aaronpowell
          token: ${{ secrets.PERSONAL_TOKEN }}
